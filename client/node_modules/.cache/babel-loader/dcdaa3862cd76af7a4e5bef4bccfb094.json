{"ast":null,"code":"import info from \"./cities.json\";\nlet cities;\ncities = info;\n\nlet autocomplete = () => {\n  // const matchList = document.getElementById(\"match-list\");\n  // const search = document.getElementById(\"search\") as HTMLInputElement;\n  // console.log();\n  // search.addEventListener('input', () => searchCity(search.value));\n  // // Show suggestions in HTML\n  // const outputHTML = matches => {\n  //     if (matches.length > 0) {\n  //         const html = matches.map(match => `\n  //                 <div>\n  //                 <h4>${match.name}</h4>\n  //                 </div> \n  //             `).join('');\n  //         matchList.innerHTML = html;\n  //     }\n  // }\n  // // Search cities.json\n  // const searchCity = searchText => {\n  //     // const response = await fetch('./cities.json');\n  //     // console.log(response)\n  //     // const cities = await response.json();\n  //     // console.log(cities + \" cities\");\n  //     // Get matches to the text input\n  //     let matches = cities.filter(city => {\n  //         const regex = new RegExp(`^${searchText}`, 'gi');\n  //         return city.name.match(regex) || city.abbr.match(regex);\n  //     });\n  //     if (searchText.length === 0) {\n  //         matches = [];\n  //     }\n  //     outputHTML(matches);\n  // };\n  const autoComplete = (element, list) => {\n    let suggestion = document.createElement(\"text\");\n    document.body.appendChild(suggestion);\n    element.addEventListener(\"input\", e => {\n      var countries = []; // console.log(e.target);\n\n      if (e.target.value) {\n        countries = cities.filter(country => country.toLowerCase().includes(e.target.value));\n        let [one, two, three, four] = countries;\n        suggestion.innerHTML = one + \" \" + two + \" \" + three;\n      } // console.log(countries);\n\n    });\n  };\n\n  autoComplete(document.getElementById(\"myInput\"), cities);\n};\n\nexport default autocomplete;","map":{"version":3,"sources":["/home/mihai/Documents/weatherApp/src/api/autocomplete.tsx"],"names":["info","cities","autocomplete","autoComplete","element","list","suggestion","document","createElement","body","appendChild","addEventListener","e","countries","target","value","filter","country","toLowerCase","includes","one","two","three","four","innerHTML","getElementById"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AAEA,IAAIC,MAAJ;AACAA,MAAM,GAAGD,IAAT;;AAEA,IAAIE,YAAY,GAAG,MAAM;AACrB;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA,QAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACpC,QAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAjB;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,UAA1B;AACAF,IAAAA,OAAO,CAACO,gBAAR,CAAyB,OAAzB,EAAmCC,CAAD,IAAO;AACrC,UAAIC,SAAS,GAAG,EAAhB,CADqC,CAErC;;AACA,UAAID,CAAC,CAACE,MAAF,CAASC,KAAb,EAAoB;AAChBF,QAAAA,SAAS,GAAGZ,MAAM,CAACe,MAAP,CAAeC,OAAD,IACtBA,OAAO,CAACC,WAAR,GAAsBC,QAAtB,CAA+BP,CAAC,CAACE,MAAF,CAASC,KAAxC,CADQ,CAAZ;AAGA,YAAI,CAACK,GAAD,EAAMC,GAAN,EAAWC,KAAX,EAAkBC,IAAlB,IAA0BV,SAA9B;AACAP,QAAAA,UAAU,CAACkB,SAAX,GAAuBJ,GAAG,GAAG,GAAN,GAAYC,GAAZ,GAAkB,GAAlB,GAAwBC,KAA/C;AACH,OAToC,CAUrC;;AACH,KAXD;AAYH,GAfD;;AAiBAnB,EAAAA,YAAY,CAACI,QAAQ,CAACkB,cAAT,CAAwB,SAAxB,CAAD,EAAqCxB,MAArC,CAAZ;AACH,CA1DD;;AA6DA,eAAeC,YAAf","sourcesContent":["import info from \"./cities.json\";\n\nlet cities: [];\ncities = info;\n\nlet autocomplete = () => {\n    // const matchList = document.getElementById(\"match-list\");\n    // const search = document.getElementById(\"search\") as HTMLInputElement;\n    // console.log();\n\n    // search.addEventListener('input', () => searchCity(search.value));\n\n    // // Show suggestions in HTML\n    // const outputHTML = matches => {\n    //     if (matches.length > 0) {\n    //         const html = matches.map(match => `\n    //                 <div>\n    //                 <h4>${match.name}</h4>\n    //                 </div> \n    //             `).join('');\n\n    //         matchList.innerHTML = html;\n    //     }\n    // }\n\n    // // Search cities.json\n    // const searchCity = searchText => {\n    //     // const response = await fetch('./cities.json');\n    //     // console.log(response)\n    //     // const cities = await response.json();\n    //     // console.log(cities + \" cities\");\n\n    //     // Get matches to the text input\n    //     let matches = cities.filter(city => {\n    //         const regex = new RegExp(`^${searchText}`, 'gi');\n    //         return city.name.match(regex) || city.abbr.match(regex);\n    //     });\n\n    //     if (searchText.length === 0) {\n    //         matches = [];\n    //     }\n\n    //     outputHTML(matches);\n    // };\n\n    const autoComplete = (element, list) => {\n        let suggestion = document.createElement(\"text\");\n        document.body.appendChild(suggestion);\n        element.addEventListener(\"input\", (e) => {\n            var countries = [];\n            // console.log(e.target);\n            if (e.target.value) {\n                countries = cities.filter((country: string) =>\n                    country.toLowerCase().includes(e.target.value)\n                );\n                let [one, two, three, four] = countries;\n                suggestion.innerHTML = one + \" \" + two + \" \" + three;\n            }\n            // console.log(countries);\n        });\n    };\n\n    autoComplete(document.getElementById(\"myInput\"), cities);\n}\n\n\nexport default autocomplete;"]},"metadata":{},"sourceType":"module"}