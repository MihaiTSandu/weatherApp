{"ast":null,"code":"let apiID = \"82e70c9d0331d48505795b7409a04db9\";\nlet openWeatherMap = \"http://api.openweathermap.org/data/2.5/weather\";\nlet locationIndicator = document.getElementById(\"locationIndicator\");\n\nlet getLocalWeatherInfo = () => {\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      locationIndicator.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n  }\n\n  function showPosition(position) {\n    openWeatherMap += `?lat=${position.coords.latitude}&lon=${position.coords.longitude}&APPID=${apiID}`;\n    callWeatherAPI();\n  }\n\n  getLocation();\n  let data;\n\n  let callWeatherAPI = async () => {\n    let response = await fetch(openWeatherMap);\n    data = await response.json();\n    console.log(data);\n    updateComponent();\n  };\n\n  let updateComponent = () => {\n    locationIndicator.innerHTML = data.name;\n    document.getElementById(\"temperatureDisplay\").innerHTML = `${convertToCelsius(data.main.temp)}째C`;\n    document.getElementById(\"feelsLike\").innerHTML = `Feels like ${convertToCelsius(data.main.feels_like)}째C`;\n  };\n};\n\nlet convertToCelsius = kelvinTemp => {\n  return Math.floor(kelvinTemp - 273.15);\n};\n\nexport default getLocalWeatherInfo;","map":{"version":3,"sources":["/home/mihai/Documents/weatherApp/src/utils/getWeatherInfo.ts"],"names":["apiID","openWeatherMap","locationIndicator","document","getElementById","getLocalWeatherInfo","getLocation","navigator","geolocation","getCurrentPosition","showPosition","innerHTML","position","coords","latitude","longitude","callWeatherAPI","data","response","fetch","json","console","log","updateComponent","name","convertToCelsius","main","temp","feels_like","kelvinTemp","Math","floor"],"mappings":"AAAA,IAAIA,KAAK,GAAG,kCAAZ;AACA,IAAIC,cAAc,GAAG,gDAArB;AACA,IAAIC,iBAAiB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAxB;;AAEA,IAAIC,mBAAmB,GAAG,MAAM;AAC9B,WAASC,WAAT,GAAuB;AACrB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD,KAFD,MAEO;AACLR,MAAAA,iBAAiB,CAAES,SAAnB,GACE,+CADF;AAED;AACF;;AAED,WAASD,YAAT,CAAsBE,QAAtB,EAA2C;AACzCX,IAAAA,cAAc,IAAK,QAAOW,QAAQ,CAACC,MAAT,CAAgBC,QAAS,QAAOF,QAAQ,CAACC,MAAT,CAAgBE,SAAU,UAASf,KAAM,EAAnG;AACAgB,IAAAA,cAAc;AACf;;AACDV,EAAAA,WAAW;AAEX,MAAIW,IAAJ;;AAEA,MAAID,cAAc,GAAG,YAAY;AAC/B,QAAIE,QAAQ,GAAG,MAAMC,KAAK,CAAClB,cAAD,CAA1B;AACAgB,IAAAA,IAAI,GAAG,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAM,IAAAA,eAAe;AAChB,GALD;;AAQA,MAAIA,eAAe,GAAG,MAAM;AAC1BrB,IAAAA,iBAAiB,CAAES,SAAnB,GAA+BM,IAAI,CAACO,IAApC;AACArB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA+CO,SAA/C,GAA4D,GAAEc,gBAAgB,CAC5ER,IAAI,CAACS,IAAL,CAAUC,IADkE,CAE5E,IAFF;AAGAxB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAsCO,SAAtC,GAAmD,cAAac,gBAAgB,CAACR,IAAI,CAACS,IAAL,CAAUE,UAAX,CAAuB,IAAvG;AAED,GAPD;AAQD,CAlCD;;AAmCA,IAAIH,gBAAgB,GAAII,UAAD,IAAwB;AAC7C,SAAOC,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAG,MAAxB,CAAP;AACD,CAFD;;AAIA,eAAexB,mBAAf","sourcesContent":["let apiID = \"82e70c9d0331d48505795b7409a04db9\";\nlet openWeatherMap = \"http://api.openweathermap.org/data/2.5/weather\";\nlet locationIndicator = document.getElementById(\"locationIndicator\");\n\nlet getLocalWeatherInfo = () => {\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      locationIndicator!.innerHTML =\n        \"Geolocation is not supported by this browser.\";\n    }\n  }\n\n  function showPosition(position: any): void {\n    openWeatherMap += `?lat=${position.coords.latitude}&lon=${position.coords.longitude}&APPID=${apiID}`;\n    callWeatherAPI();\n  }\n  getLocation();\n\n  let data: any;\n\n  let callWeatherAPI = async () => {\n    let response = await fetch(openWeatherMap);\n    data = await response.json();\n    console.log(data);\n    updateComponent();\n  };\n\n  \n  let updateComponent = () => {\n    locationIndicator!.innerHTML = data.name;\n    document.getElementById(\"temperatureDisplay\")!.innerHTML = `${convertToCelsius(\n      data.main.temp\n    )}째C`;\n    document.getElementById(\"feelsLike\")!.innerHTML = `Feels like ${convertToCelsius(data.main.feels_like)}째C`;\n\n  };\n};\nlet convertToCelsius = (kelvinTemp: number) => {\n  return Math.floor(kelvinTemp - 273.15);\n};\n\nexport default getLocalWeatherInfo;\n"]},"metadata":{},"sourceType":"module"}