{"ast":null,"code":"import { Component } from \"react\";\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\"\n    };\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["/home/mihai/Documents/weatherApp/src/components/autocomplete.tsx"],"names":["Component","Autocomplete","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","state"],"mappings":"AACA,SAAgBA,SAAhB,QAA2C,OAA3C;;AAGA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAiBjCE,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;;AADoB,SAhBxBC,QAgBwB,GAhBbC,CAAC,IAAI;AACZ,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKH,KAA7B;AACA,YAAMI,SAAS,GAAGF,CAAC,CAACG,aAAF,CAAgBC,KAAlC;AAEA,YAAMC,mBAAmB,GAAGJ,WAAW,CAACK,MAAZ,CACxBC,UAAU,IACNA,UAAU,CAACC,WAAX,GAAyBC,OAAzB,CAAiCP,SAAS,CAACM,WAAV,EAAjC,IAA4D,CAAC,CAFzC,CAA5B;AAKA,WAAKE,QAAL,CAAc;AACVC,QAAAA,gBAAgB,EAAE,CADR;AAEVN,QAAAA,mBAFU;AAGVO,QAAAA,eAAe,EAAE,IAHP;AAIVV,QAAAA,SAAS,EAAEF,CAAC,CAACG,aAAF,CAAgBC;AAJjB,OAAd;AAMH,KACuB;;AAEpB,SAAKS,KAAL,GAAa;AACTF,MAAAA,gBAAgB,EAAE,CADT;AAETN,MAAAA,mBAAmB,EAAE,EAFZ;AAGTO,MAAAA,eAAe,EAAE,KAHR;AAITV,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMH;;AAzBgC;;AA4BrC,eAAeN,YAAf","sourcesContent":["import * as cities from \"../api/cities.json\"\nimport React, { Component, Fragment } from \"react\";\n\n\nclass Autocomplete extends Component {\n    onChange = e => {\n        const { suggestions } = this.props;\n        const userInput = e.currentTarget.value;\n\n        const filteredSuggestions = suggestions.filter(\n            suggestion =>\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: e.currentTarget.value\n        });\n    };\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: \"\"\n        };\n    }\n}\n\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}