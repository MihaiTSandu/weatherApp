{"ast":null,"code":"import { Component } from \"react\";\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } // User pressed the down arrow, increment the index\n      else if (e.keyCode === 40) {\n          if (activeSuggestion - 1 === filteredSuggestions.length) {\n            return;\n          }\n\n          this.setState({\n            activeSuggestion: activeSuggestion + 1\n          });\n        }\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\"\n    };\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["/home/mihai/Documents/weatherApp/src/components/autocomplete.tsx"],"names":["Component","Autocomplete","constructor","props","onKeyDown","e","activeSuggestion","filteredSuggestions","state","keyCode","setState","showSuggestions","userInput","length","onClick","currentTarget","innerText","onChange","suggestions","value","filter","suggestion","toLowerCase","indexOf"],"mappings":"AACA,SAAgBA,SAAhB,QAA2C,OAA3C;;AAGA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAqDjCE,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;;AADoB,SAnDxBC,SAmDwB,GAnDZC,CAAC,IAAI;AACb,YAAM;AAAEC,QAAAA,gBAAF;AAAoBC,QAAAA;AAApB,UAA4C,KAAKC,KAAvD;;AAEA,UAAIH,CAAC,CAACI,OAAF,KAAc,EAAlB,EAAsB;AAClB,aAAKC,QAAL,CAAc;AACVJ,UAAAA,gBAAgB,EAAE,CADR;AAEVK,UAAAA,eAAe,EAAE,KAFP;AAGVC,UAAAA,SAAS,EAAEL,mBAAmB,CAACD,gBAAD;AAHpB,SAAd;AAKH,OAND,MAMO,IAAID,CAAC,CAACI,OAAF,KAAc,EAAlB,EAAsB;AACzB,YAAIH,gBAAgB,KAAK,CAAzB,EAA4B;AACxB;AACH;;AACD,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,gBAAgB,EAAEA,gBAAgB,GAAG;AAAvC,SAAd;AACH,OALM,CAMP;AANO,WAOF,IAAID,CAAC,CAACI,OAAF,KAAc,EAAlB,EAAsB;AACvB,cAAIH,gBAAgB,GAAG,CAAnB,KAAyBC,mBAAmB,CAACM,MAAjD,EAAyD;AACrD;AACH;;AACD,eAAKH,QAAL,CAAc;AAAEJ,YAAAA,gBAAgB,EAAEA,gBAAgB,GAAG;AAAvC,WAAd;AACH;AACJ,KA6BuB;;AAAA,SA3BxBQ,OA2BwB,GA3BdT,CAAC,IAAI;AACX,WAAKK,QAAL,CAAc;AACVJ,QAAAA,gBAAgB,EAAE,CADR;AAEVC,QAAAA,mBAAmB,EAAE,EAFX;AAGVI,QAAAA,eAAe,EAAE,KAHP;AAIVC,QAAAA,SAAS,EAAEP,CAAC,CAACU,aAAF,CAAgBC;AAJjB,OAAd;AAMH,KAoBuB;;AAAA,SAlBxBC,QAkBwB,GAlBbZ,CAAC,IAAI;AACZ,YAAM;AAAEa,QAAAA;AAAF,UAAkB,KAAKf,KAA7B;AACA,YAAMS,SAAS,GAAGP,CAAC,CAACU,aAAF,CAAgBI,KAAlC;AAEA,YAAMZ,mBAAmB,GAAGW,WAAW,CAACE,MAAZ,CACxBC,UAAU,IACNA,UAAU,CAACC,WAAX,GAAyBC,OAAzB,CAAiCX,SAAS,CAACU,WAAV,EAAjC,IAA4D,CAAC,CAFzC,CAA5B;AAKA,WAAKZ,QAAL,CAAc;AACVJ,QAAAA,gBAAgB,EAAE,CADR;AAEVC,QAAAA,mBAFU;AAGVI,QAAAA,eAAe,EAAE,IAHP;AAIVC,QAAAA,SAAS,EAAEP,CAAC,CAACU,aAAF,CAAgBI;AAJjB,OAAd;AAMH,KAGuB;;AAEpB,SAAKX,KAAL,GAAa;AACTF,MAAAA,gBAAgB,EAAE,CADT;AAETC,MAAAA,mBAAmB,EAAE,EAFZ;AAGTI,MAAAA,eAAe,EAAE,KAHR;AAITC,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMH;;AA7DgC;;AAgErC,eAAeX,YAAf","sourcesContent":["import * as cities from \"../api/cities.json\"\nimport React, { Component, Fragment } from \"react\";\n\n\nclass Autocomplete extends Component {\n\n    onKeyDown = e => {\n        const { activeSuggestion, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n            this.setState({\n                activeSuggestion: 0,\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestion]\n            });\n        } else if (e.keyCode === 38) {\n            if (activeSuggestion === 0) {\n                return;\n            }\n            this.setState({ activeSuggestion: activeSuggestion - 1 });\n        }\n        // User pressed the down arrow, increment the index\n        else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n                return;\n            }\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\n        }\n    };\n\n    onClick = e => {\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: e.currentTarget.innerText\n        });\n    };\n\n    onChange = e => {\n        const { suggestions } = this.props;\n        const userInput = e.currentTarget.value;\n\n        const filteredSuggestions = suggestions.filter(\n            suggestion =>\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: e.currentTarget.value\n        });\n    };\n\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: \"\"\n        };\n    }\n}\n\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}