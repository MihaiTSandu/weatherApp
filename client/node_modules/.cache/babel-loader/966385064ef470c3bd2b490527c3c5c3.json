{"ast":null,"code":"import { Component } from \"react\";\n\nonChange = e => {\n  const {\n    suggestions\n  } = this.props;\n  const userInput = e.currentTarget.value;\n  const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n  this.setState({\n    activeSuggestion: 0,\n    filteredSuggestions,\n    showSuggestions: true,\n    userInput: e.currentTarget.value\n  });\n};\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\"\n    };\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["/home/mihai/Documents/weatherApp/src/components/autocomplete.tsx"],"names":["Component","onChange","e","suggestions","props","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","Autocomplete","constructor","state"],"mappings":"AACA,SAAgBA,SAAhB,QAA2C,OAA3C;;AAEAC,QAAQ,GAAGC,CAAC,IAAI;AACZ,QAAM;AAAEC,IAAAA;AAAF,MAAkB,KAAKC,KAA7B;AACA,QAAMC,SAAS,GAAGH,CAAC,CAACI,aAAF,CAAgBC,KAAlC;AAEA,QAAMC,mBAAmB,GAAGL,WAAW,CAACM,MAAZ,CACxBC,UAAU,IACNA,UAAU,CAACC,WAAX,GAAyBC,OAAzB,CAAiCP,SAAS,CAACM,WAAV,EAAjC,IAA4D,CAAC,CAFzC,CAA5B;AAKA,OAAKE,QAAL,CAAc;AACVC,IAAAA,gBAAgB,EAAE,CADR;AAEVN,IAAAA,mBAFU;AAGVO,IAAAA,eAAe,EAAE,IAHP;AAIVV,IAAAA,SAAS,EAAEH,CAAC,CAACI,aAAF,CAAgBC;AAJjB,GAAd;AAMH,CAfD;;AAiBA,MAAMS,YAAN,SAA2BhB,SAA3B,CAAqC;AACjCiB,EAAAA,WAAW,CAACb,KAAD,EAAa;AACpB,UAAMA,KAAN;AACA,SAAKc,KAAL,GAAa;AACTJ,MAAAA,gBAAgB,EAAE,CADT;AAETN,MAAAA,mBAAmB,EAAE,EAFZ;AAGTO,MAAAA,eAAe,EAAE,KAHR;AAITV,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMH;;AATgC;;AAYrC,eAAeW,YAAf","sourcesContent":["import * as cities from \"../api/cities.json\"\nimport React, { Component, Fragment } from \"react\";\n\nonChange = e => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n\n    const filteredSuggestions = suggestions.filter(\n        suggestion =>\n            suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n    });\n};\n\nclass Autocomplete extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: \"\"\n        };\n    }\n}\n\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}